#!groovy
// Run docker build
properties([disableConcurrentBuilds()])

pipeline {
    agent { 
        label 'master'
        }
    triggers { pollSCM('* * * * *') }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        // stage("docker login") {
        //     steps {
        //         echo " ============== docker login =================="
        //         withCredentials([usernamePassword(credentialsId: 'dockerhub_semaev', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
        //             sh """
        //             docker login -u $USERNAME -p $PASSWORD
        //             """
        //         }
        //     }
        // }
        stage("docker image build") {
            steps {
                echo " ============== stage 1: building image locally =================="
                dir ('docker/toolbox') {
                	// sh 'docker build -t semaev/toolbox:latest . '
                    sh 'docker build -t itdoq/push-image-alpine-echo:latest . ' 
                }
            }
        }
        stage("push to docker hub") {
            steps {
                echo " ============== stage 2: pushing image to docker hub =================="
                sh '''
                docker push itdoq/push-image-alpine-echo:latest
                '''
            }
        }
        stage("docker hub run") {
            steps {
                echo " ============== stage 3: runnin image from docker hub =================="
                sh 'docker run itdoq/push-image-alpine-echo:latest'
            }
        }
    }
}