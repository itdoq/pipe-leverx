#!groovy
// Run docker build
properties([disableConcurrentBuilds()])

pipeline {
    agent { 
        label 'master'
        }
    triggers { pollSCM('* * * * *') }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    
    stages {
        stage("build docker image") {
            steps {
                echo " ============== stage 1: building image locally =================="
                dir ('docker/toolbox') {
                    sh 'docker build -t itdoq/push-image-alpine-echo:latest . ' 
                }
            }
        }
        stage("login to docker hub") {
            steps {
                echo " ============== stage 2: docker login =================="
                withCredentials([usernamePassword(credentialsId: 'dockerhub_itdoq', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh 'docker login -u $USERNAME -p $PASSWORD'
                }
            }
        }
        stage("push to docker hub") {
            steps {
                echo " ============== stage 3: pushing image to docker hub =================="
                sh 'docker push itdoq/push-image-alpine-echo:latest'
            }
        }
        stage("docker hub run") {
            steps {
                echo " ============== stage 4: runnin image from docker hub =================="
                sh 'docker run itdoq/push-image-alpine-echo:latest'
            }
        }
    }
}